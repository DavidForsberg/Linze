import type { NextPage } from "next";
import { withUrqlClient } from "next-urql";
import Head from "next/head";
import Link from "next/link";
import { useState } from "react";
import Layout from "../components/layout";
import UpdootSection from "../components/UpdootSection";
import { useMeQuery, usePostsQuery } from "../src/generated/graphql";
import { createUrqlClient } from "../utils/createUrqlClient";

const Home: NextPage = () => {
  const [variables, setVariables] = useState({
    limit: 15,
    cursor: null as null | string,
  });

  const [{ data: meData }] = useMeQuery();

  const [{ data, fetching }] = usePostsQuery({
    variables,
  });

  if (!fetching && !data) {
    return <div>Query failed for some reason</div>;
  }

  return (
    <Layout>
      <div className="flex flex-col w-8/12">
        <Head>
          <title>Linze</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <div className="flex justify-between">
          <h1 className="text-3xl font-bold text-secondary">Linze</h1>
          <Link href="/create-post">
            <a className="text-secondary text-xl">create post</a>
          </Link>
        </div>
        {!data && fetching ? (
          <p>Loading...</p>
        ) : (
          <div className="flex flex-col">
            {data!.posts.posts.map((p) =>
              !p ? null : (
                <UpdootSection
                  post={p}
                  key={p.id}
                  isCreator={meData?.me?.id === p.creator.id}
                />
              )
            )}
          </div>
        )}
        {data && data.posts.hasMore && (
          <button
            onClick={() => {
              setVariables({
                limit: variables.limit,
                cursor:
                  data.posts.posts[data.posts.posts.length - 1].created_at,
              });
            }}
            className={`py-2 px-4 bg-primary rounded-lg mt-16 m-auto ${
              fetching && "opacity-50"
            }`}
          >
            load more
          </button>
        )}
      </div>
    </Layout>
  );
};

export default withUrqlClient(createUrqlClient)(Home);
